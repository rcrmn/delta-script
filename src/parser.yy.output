Nonterminals useless in grammar

   fun_def
   proto_def
   if_stmt
   while_stmt
   for_stmt
   lambda_fun
   array_def
   range_def
   map_def


Terminals unused in grammar

   WS
   FUN
   PROTOTYPE
   IF
   ELIF
   ELSE
   WHILE
   FOR
   IN
   BREAK
   CONTINUE
   RETURN
   END
   GTE
   LTE
   EQ
   NEQ
   INC
   DEC
   AND
   OR
   XOR
   LEXER_ERR
   '-'
   '*'
   '/'


Rules useless in grammar

   33 fun_def: /* empty */

   34 proto_def: /* empty */

   35 if_stmt: /* empty */

   36 while_stmt: /* empty */

   37 for_stmt: /* empty */

   38 lambda_fun: /* empty */

   39 array_def: /* empty */

   40 range_def: /* empty */

   41 map_def: /* empty */


State 35 conflicts: 5 shift/reduce
State 43 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 $@1: /* empty */

    2 start: expression $@1 start
    3      | /* empty */

    4 expression: var_def
    5           | assign_expr
    6           | fun_call

    7 assign_expr: slot '=' value
    8            | slot ADD value
    9            | slot SUB value
   10            | slot MUL value
   11            | slot DIV value

   12 slot: NAME
   13     | NAME '.' slot
   14     | const_val '.' slot

   15 inner_value: slot
   16            | const_val
   17            | operation
   18            | '(' value ')'

   19 value: inner_value
   20      | fun_call

   21 operation: inner_value '+' inner_value

   22 fun_call: slot param_list
   23         | par_fun_call

   24 par_fun_call: slot '(' param_list ')'

   25 param_list: inner_value ',' param_list
   26           | inner_value

   27 const_val: NUMBER
   28          | STRING
   29          | BOOLEAN
   30          | SYMBOL

   31 var_def: VAR NAME
   32        | VAR NAME '=' value


Terminals, with rules where they appear

$end (0) 0
'(' (40) 18 24
')' (41) 18 24
'*' (42)
'+' (43) 21
',' (44) 25
'-' (45)
'.' (46) 13 14
'/' (47)
'=' (61) 7 32
error (256)
NUMBER (258) 27
STRING (259) 28
NAME (260) 12 13 31 32
SYMBOL (261) 30
BOOLEAN (262) 29
WS (263)
FUN (264)
VAR (265) 31 32
PROTOTYPE (266)
IF (267)
ELIF (268)
ELSE (269)
WHILE (270)
FOR (271)
IN (272)
BREAK (273)
CONTINUE (274)
RETURN (275)
END (276)
GTE (277)
LTE (278)
EQ (279)
NEQ (280)
INC (281)
DEC (282)
ADD (283) 8
SUB (284) 9
MUL (285) 10
DIV (286) 11
AND (287)
OR (288)
XOR (289)
LEXER_ERR (290)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
start (46)
    on left: 2 3, on right: 0 2
$@1 (47)
    on left: 1, on right: 2
expression (48)
    on left: 4 5 6, on right: 2
assign_expr (49)
    on left: 7 8 9 10 11, on right: 5
slot (50)
    on left: 12 13 14, on right: 7 8 9 10 11 13 14 15 22 24
inner_value (51)
    on left: 15 16 17 18, on right: 19 21 25 26
value (52)
    on left: 19 20, on right: 7 8 9 10 11 18 32
operation (53)
    on left: 21, on right: 17
fun_call (54)
    on left: 22 23, on right: 6 20
par_fun_call (55)
    on left: 24, on right: 23
param_list (56)
    on left: 25 26, on right: 22 24 25
const_val (57)
    on left: 27 28 29 30, on right: 14 16
var_def (58)
    on left: 31 32, on right: 4


state 0

    0 $accept: . start $end

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    VAR      shift, and go to state 6

    $default  reduce using rule 3 (start)

    start         go to state 7
    expression    go to state 8
    assign_expr   go to state 9
    slot          go to state 10
    fun_call      go to state 11
    par_fun_call  go to state 12
    const_val     go to state 13
    var_def       go to state 14


state 1

   27 const_val: NUMBER .

    $default  reduce using rule 27 (const_val)


state 2

   28 const_val: STRING .

    $default  reduce using rule 28 (const_val)


state 3

   12 slot: NAME .
   13     | NAME . '.' slot

    '.'  shift, and go to state 15

    $default  reduce using rule 12 (slot)


state 4

   30 const_val: SYMBOL .

    $default  reduce using rule 30 (const_val)


state 5

   29 const_val: BOOLEAN .

    $default  reduce using rule 29 (const_val)


state 6

   31 var_def: VAR . NAME
   32        | VAR . NAME '=' value

    NAME  shift, and go to state 16


state 7

    0 $accept: start . $end

    $end  shift, and go to state 17


state 8

    2 start: expression . $@1 start

    $default  reduce using rule 1 ($@1)

    $@1  go to state 18


state 9

    5 expression: assign_expr .

    $default  reduce using rule 5 (expression)


state 10

    7 assign_expr: slot . '=' value
    8            | slot . ADD value
    9            | slot . SUB value
   10            | slot . MUL value
   11            | slot . DIV value
   22 fun_call: slot . param_list
   24 par_fun_call: slot . '(' param_list ')'

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    ADD      shift, and go to state 19
    SUB      shift, and go to state 20
    MUL      shift, and go to state 21
    DIV      shift, and go to state 22
    '='      shift, and go to state 23
    '('      shift, and go to state 24

    slot         go to state 25
    inner_value  go to state 26
    operation    go to state 27
    param_list   go to state 28
    const_val    go to state 29


state 11

    6 expression: fun_call .

    $default  reduce using rule 6 (expression)


state 12

   23 fun_call: par_fun_call .

    $default  reduce using rule 23 (fun_call)


state 13

   14 slot: const_val . '.' slot

    '.'  shift, and go to state 30


state 14

    4 expression: var_def .

    $default  reduce using rule 4 (expression)


state 15

   13 slot: NAME '.' . slot

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    slot       go to state 31
    const_val  go to state 13


state 16

   31 var_def: VAR NAME .
   32        | VAR NAME . '=' value

    '='  shift, and go to state 32

    $default  reduce using rule 31 (var_def)


state 17

    0 $accept: start $end .

    $default  accept


state 18

    2 start: expression $@1 . start

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    VAR      shift, and go to state 6

    $default  reduce using rule 3 (start)

    start         go to state 33
    expression    go to state 8
    assign_expr   go to state 9
    slot          go to state 10
    fun_call      go to state 11
    par_fun_call  go to state 12
    const_val     go to state 13
    var_def       go to state 14


state 19

    8 assign_expr: slot ADD . value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 37
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 20

    9 assign_expr: slot SUB . value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 39
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 21

   10 assign_expr: slot MUL . value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 40
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 22

   11 assign_expr: slot DIV . value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 41
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 23

    7 assign_expr: slot '=' . value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 42
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 24

   18 inner_value: '(' . value ')'
   24 par_fun_call: slot '(' . param_list ')'

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 43
    value         go to state 44
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    param_list    go to state 45
    const_val     go to state 29


state 25

   15 inner_value: slot .

    $default  reduce using rule 15 (inner_value)


state 26

   21 operation: inner_value . '+' inner_value
   25 param_list: inner_value . ',' param_list
   26           | inner_value .

    '+'  shift, and go to state 46
    ','  shift, and go to state 47

    $default  reduce using rule 26 (param_list)


state 27

   17 inner_value: operation .

    $default  reduce using rule 17 (inner_value)


state 28

   22 fun_call: slot param_list .

    $default  reduce using rule 22 (fun_call)


state 29

   14 slot: const_val . '.' slot
   16 inner_value: const_val .

    '.'  shift, and go to state 30

    $default  reduce using rule 16 (inner_value)


state 30

   14 slot: const_val '.' . slot

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    slot       go to state 48
    const_val  go to state 13


state 31

   13 slot: NAME '.' slot .

    $default  reduce using rule 13 (slot)


state 32

   32 var_def: VAR NAME '=' . value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 49
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 33

    2 start: expression $@1 start .

    $default  reduce using rule 2 (start)


state 34

   18 inner_value: '(' . value ')'

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot          go to state 35
    inner_value   go to state 36
    value         go to state 44
    operation     go to state 27
    fun_call      go to state 38
    par_fun_call  go to state 12
    const_val     go to state 29


state 35

   15 inner_value: slot .
   22 fun_call: slot . param_list
   24 par_fun_call: slot . '(' param_list ')'

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 24

    NUMBER    [reduce using rule 15 (inner_value)]
    STRING    [reduce using rule 15 (inner_value)]
    NAME      [reduce using rule 15 (inner_value)]
    SYMBOL    [reduce using rule 15 (inner_value)]
    BOOLEAN   [reduce using rule 15 (inner_value)]
    $default  reduce using rule 15 (inner_value)

    slot         go to state 25
    inner_value  go to state 26
    operation    go to state 27
    param_list   go to state 28
    const_val    go to state 29


state 36

   19 value: inner_value .
   21 operation: inner_value . '+' inner_value

    '+'  shift, and go to state 46

    $default  reduce using rule 19 (value)


state 37

    8 assign_expr: slot ADD value .

    $default  reduce using rule 8 (assign_expr)


state 38

   20 value: fun_call .

    $default  reduce using rule 20 (value)


state 39

    9 assign_expr: slot SUB value .

    $default  reduce using rule 9 (assign_expr)


state 40

   10 assign_expr: slot MUL value .

    $default  reduce using rule 10 (assign_expr)


state 41

   11 assign_expr: slot DIV value .

    $default  reduce using rule 11 (assign_expr)


state 42

    7 assign_expr: slot '=' value .

    $default  reduce using rule 7 (assign_expr)


state 43

   19 value: inner_value .
   21 operation: inner_value . '+' inner_value
   25 param_list: inner_value . ',' param_list
   26           | inner_value .

    '+'  shift, and go to state 46
    ','  shift, and go to state 47

    ')'       reduce using rule 19 (value)
    ')'       [reduce using rule 26 (param_list)]
    $default  reduce using rule 19 (value)


state 44

   18 inner_value: '(' value . ')'

    ')'  shift, and go to state 50


state 45

   24 par_fun_call: slot '(' param_list . ')'

    ')'  shift, and go to state 51


state 46

   21 operation: inner_value '+' . inner_value

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot         go to state 25
    inner_value  go to state 52
    operation    go to state 27
    const_val    go to state 29


state 47

   25 param_list: inner_value ',' . param_list

    NUMBER   shift, and go to state 1
    STRING   shift, and go to state 2
    NAME     shift, and go to state 3
    SYMBOL   shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    '('      shift, and go to state 34

    slot         go to state 25
    inner_value  go to state 26
    operation    go to state 27
    param_list   go to state 53
    const_val    go to state 29


state 48

   14 slot: const_val '.' slot .

    $default  reduce using rule 14 (slot)


state 49

   32 var_def: VAR NAME '=' value .

    $default  reduce using rule 32 (var_def)


state 50

   18 inner_value: '(' value ')' .

    $default  reduce using rule 18 (inner_value)


state 51

   24 par_fun_call: slot '(' param_list ')' .

    $default  reduce using rule 24 (par_fun_call)


state 52

   21 operation: inner_value . '+' inner_value
   21          | inner_value '+' inner_value .

    $default  reduce using rule 21 (operation)


state 53

   25 param_list: inner_value ',' param_list .

    $default  reduce using rule 25 (param_list)
